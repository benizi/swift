# Check reporting of missing inputs.

# Run an initial build which fails on the command.
#
# RUN: rm -rf %t.build
# RUN: mkdir -p %t.build
# RUN: cp %s %t.build/build.llbuild
# RUN: %{llbuild} buildsystem build --serial --chdir %t.build > %t.out 2> %t.err || true
# RUN: %{FileCheck} %s --input-file %t.err --check-prefix=CHECK-FAILURE-ERR
#
# CHECK-FAILURE-ERR: missing input 'input' and no rule to build it
# CHECK-FAILURE-ERR: cannot build 'output-1' due to missing input

# RUN: touch %t.build/input
# RUN: %{llbuild} buildsystem build --serial --chdir %t.build > %t2.out 2> %t2.err || true
# RUN: %{FileCheck} %s --input-file %t2.err --check-prefix=CHECK-FAILURE-2-ERR
#
# CHECK-FAILURE-2-ERR: missing input 'output-2' and no rule to build it
# CHECK-FAILURE-2-ERR: cannot build 'output-2B' due to missing input

client:
  name: basic

targets:
  "": ["output"]

commands:
  C1:
    tool: shell
    inputs: ["input"]
    outputs: ["output-1"]
    args: cp input output-1

  C2:
    tool: shell
    # A command which doesn't produce its output
    outputs: ["output-2"]
    args: true

  C3:
    tool: shell
    inputs: ["output-2"]
    outputs: ["output-2B"]
    args: cp output-2 output-2B

  C4:
    tool: shell
    inputs: ["output-1", "output-2B"]
    outputs: ["output"]
    args: cp output-1 output
